# This workflow will perform the following actions when the code is pushed to production branch:
# - Run test using Playwright
# - Build the latest docker image in production which needs test to pass first.
#
# Maintainers:
#   - name: Nisha Sharma
#   - email: nisha.sharma@uni-jena.de

name: Build and Deploy to Prod

on:
  release:
    types: [published]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME  }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD  }}
  REPOSITORY_NAME: nodejs-microservice
  REPOSITORY_NAMESPACE: nfdi4chem

jobs:
  e2etest:
    uses: NFDI4Chem/nmrxiv-nodejs-microservice/.github/workflows/e2e.yml@development

  setup-build-publish-deploy-prod:
    name: Deploy to prod 
    runs-on: ubuntu-latest
    needs: e2etest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configure docker
        run: |-
          gcloud auth configure-docker europe-west3-docker.pkg.dev


      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME  }}
          password: ${{ env.DOCKER_HUB_PASSWORD  }}

      # Build and push image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            RELEASE_VERSION=${{ github.event.release.tag_name }}
          tags: |
            ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:${{ github.event.release.tag_name }}
            ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:latest
